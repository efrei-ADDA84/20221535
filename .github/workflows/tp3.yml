name: To Azure
on:
  push:
    branches:
      - main
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.1.2
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
        continue-on-error: true
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: artranart/efrei-devops-tp3:1.0.0
        
      - name: 'Login via Azure CLI'
        uses: Azure/login@v2.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Log in to Azure Container Registry
        uses: Azure/docker-login@v1.0.1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push Docker image to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.MY_EFREI_IDENT }}:latest 
      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: devops-${{ secrets.MY_EFREI_IDENT }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.MY_EFREI_IDENT }}:latest
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: ${{ secrets.MY_EFREI_IDENT }}
          location: 'france south'
          environment-variables: API_KEY=${{ secrets.API_KEY }}
